name: Deploy from main branch

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  NAMESPACE: tokopaedi
  BASE_DOMAIN: tokopaedi.ukasyah.my.id

jobs:
  build-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache nuget-packages
        id: cache-nuget-packages
        uses: actions/cache@v4
        with:
          path: nuget-packages
          key: ${{ runner.os }}-nuget-packages-${{ hashFiles('**/*.csproj') }}

      - name: inject nuget-packages cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v2.1.4
        with:
          cache-source: nuget-packages
          cache-target: /root/.nuget/packages
          skip-extraction: ${{ steps.cache-nuget-packages.outputs.cache-hit }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.backend
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.REGISTRY }}/ukasyah-lab/tokopaedi-backend:main
  
  build-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache pnpm-store
        id: cache-pnpm-store
        uses: actions/cache@v4
        with:
          path: pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: inject pnpm-store cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v2.1.4
        with:
          cache-source: pnpm-store
          cache-target: /pnpm/store
          skip-extraction: ${{ steps.cache-pnpm-store.outputs.cache-hit }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.frontend
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.REGISTRY }}/ukasyah-lab/tokopaedi-frontend:main
  
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-backend
      - build-frontend
    permissions:
      contents: read
    steps:
      - name: ZeroTier
        uses: zerotier/github-action@v1
        with:
          network_id: ${{ secrets.ZEROTIER_NETWORK_ID }}
          auth_token: ${{ secrets.ZEROTIER_CENTRAL_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: azure/setup-helm@v3
        with:
          version: "3.14.2"

      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.2.0

      - uses: mobiledevops/secret-to-file-action@v1
        with:
          base64-encoded-secret: ${{ secrets.KUBECONFIG }}
          filename: "config"
          working-directory: "/home/runner/.kube"

      - run: |
          helm upgrade --install --history-max=1 \
            -n ${{ env.NAMESPACE }} --create-namespace \
            --set ingress.baseDomain=${{ env.BASE_DOMAIN }} \
            ${{ steps.repo-name.outputs.repository-name }} \
            .helm
